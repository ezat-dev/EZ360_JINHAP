<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="work">

	<delete id="deleteInventoryStatus" parameterType="list">
	    DELETE FROM tb_new_inventorystatus
	    WHERE id IN
	    <foreach item="id" collection="list" open="(" separator="," close=")">
	        #{id}
	    </foreach>
	</delete>


   <select id="getInventoryStatusList" parameterType="Work" resultType="Work">
		    SELECT * 
    FROM v_inventory_balance
    WHERE `reg_date` LIKE CONCAT(#{startDate}, '%')
      AND `lot_no` IS NOT NULL
      <if test="medicine_name != null and medicine_name != '' and medicine_name != 'Ï†ÑÏ≤¥'">
          AND `medicine_name` = #{medicine_name}
      </if>
   </select>


   <!-- Ïû¨Í≥†Í¥ÄÎ¶¨ ÏóÖÎç∞Ïù¥Ìä∏ -->
   <update id="inventoryStatusUpdate" parameterType="Work">
      UPDATE tb_new_inventorystatus
    SET
        company_name = #{company_name},
        reg_date = #{reg_date},
        medicine_name = #{medicine_name},
        lot_no = #{lot_no},
        stock_in = #{stock_in},
        daily_usage = #{daily_usage}
    WHERE id = #{id}
   </update>



<insert id="insertinventoryStatus" parameterType="Work" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO tb_new_inventorystatus
    (company_name, reg_date, medicine_name, lot_no, stock_in, daily_usage)
    VALUES
    (#{company_name}, #{reg_date}, #{medicine_name}, #{lot_no}, #{stock_in}, #{daily_usage})
</insert>













	


   <!-- ÏàòÏûÖÍ≤ÄÏÇ¨  -->
   <select id="getInTestList" parameterType="Work" resultType="Work">
		    SELECT * 
    FROM tb_new_inventorystatus_test
    WHERE `reg_date` LIKE CONCAT(#{startDate}, '%')
      AND `lot_no` IS NOT NULL

   </select>



   <update id="inTestUpdate" parameterType="Work">
         UPDATE tb_new_inventorystatus_test
    SET
        in_1 = #{in_1},
        in_2 = #{in_2},
        in_3 = #{in_3},
        in_4 = #{in_4},
        in_5 = #{in_5},
        in_6 = #{in_6}
    WHERE id = #{id}
   </update>



<insert id="insertinTest" parameterType="Work" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO tb_new_inventorystatus_test
    (company_name, reg_date, medicine_name, lot_no, stock_in, daily_usage)
    VALUES
    (#{company_name}, #{reg_date}, #{medicine_name}, #{lot_no}, #{stock_in}, #{daily_usage})
</insert>









 <select id="getMachineEfficStatusList" resultType="Work">
    SELECT facility_name, a, b, c, d
    FROM v_machineefficstatus
</select>





<select id="getWorkDailyList" parameterType="Work" resultType="Work">
SELECT
  ROW_NUMBER() OVER(ORDER BY bb.end_time) AS r_num,
  IFNULL(bb.division_num,'0') AS a,       -- üîπ ez_geo_hst.division_num Í∞ÄÏ†∏Ïò§Í∏∞
  bb.group_id,
  bb.start_time,
  bb.end_time,
  bb.tong_day,
  bb.weight_day,
  bb.item_nm,
  bb.item_cd,
  bb.next_facility,
  bb.wrk_ord_no,
  CASE 
    WHEN bb.division_weight = 0 THEN 0
    ELSE CASE 
           WHEN (bb.weight_day / bb.division_weight) > 1 
           THEN FLOOR((bb.weight_day / bb.division_weight)) + 1 
           ELSE 1 
         END
  END AS a2,                  
  '' AS b,
  '' AS c,
  '' AS d,
  CASE 
    WHEN bb.wrk_ord_no LIKE '%WR%' THEN 'Ïû¨ÏûëÏóÖ'
    ELSE 'Ïã†Í∑ú'
  END AS e,                   
  '' AS f,
  hst2_barcode,
  barcode_no
FROM (
  SELECT 
    aa.mach_code,
    aa.end_time,
    aa.start_time,
    aa.tong_day,
    aa.weight_day,
    aa.item_cd,
    aa.item_nm,
    aa.wrk_ord_no,
    ab.coating_nm AS next_facility,
    ab.group_id,
    COALESCE(aa.std_weight, 0) AS division_weight,
    eh.division_num,             -- üîπ ez_geo_hst.division_num JOIN
    hst2_barcode,
    barcode_no
  FROM (
    SELECT
      lows.mach_code,
      lows.barcode_no,
      ROUND(lows.weight, 0) AS weight_day,
      1 AS tong_day,
      fac.facility_name,
      fac.std_weight,
      lows.start_time,
      lows.end_time,
      lows.item_cd,
      lows.item_nm,
      lows.wrk_ord_no,
      LEAD(lows.end_time) OVER(
        PARTITION BY lows.mach_code, lows.barcode_no 
        ORDER BY lows.end_time DESC
      ) AS next_start_time
    FROM tb_lowdata_save AS lows
    INNER JOIN tb_facility AS fac
      ON lows.mach_code = fac.facility_mach_code
    WHERE 1=1
 <if test="s_time != null">
        AND lows.end_time &gt;= #{s_time}
      </if>
      <if test="e_time != null">
        AND lows.end_time &lt; #{e_time}
      </if>
      <if test="m_code2 != null and m_code2 != ''">
        AND lows.mach_code IN (${m_code2})
      </if>
      AND lows.weight IS NOT NULL
  ) AS aa
  LEFT JOIN pwo_geo_division_data AS ab
    ON aa.item_cd = ab.item_cd
  LEFT JOIN
    (
    	SELECT barcode_no AS hst2_barcode, MAX(division_num) AS division_num
  		FROM ez_geo_hst2_save3 
  		WHERE mach_code = #{m_code}
  		AND wrk_gbn_state = 'IN'
  		GROUP BY barcode_no
  	) AS eh
    ON aa.barcode_no = eh.hst2_barcode   -- üîπ division_num Í∞ÄÏ†∏Ïò§Îäî ÏúÑÏπòÎ•º Ïù¥Ï™ΩÏúºÎ°ú ÏòÆÍπÄ
) AS bb
WHERE 1=1
AND bb.mach_code = #{m_code}
ORDER BY bb.end_time;
</select>

<select id="list_condition" parameterType="map" resultType="Work">

 SELECT
  ROW_NUMBER() OVER(ORDER BY bb.end_time) AS r_num,
  IFNULL(bb.division_num,'0') AS a,       -- üîπ ez_geo_hst.division_num Í∞ÄÏ†∏Ïò§Í∏∞
  bb.group_id,
  bb.start_time,
  bb.end_time,
  bb.tong_day,
  bb.weight_day,
  bb.item_nm,
  bb.item_cd,
  bb.next_facility,
  bb.wrk_ord_no,
  CASE 
    WHEN bb.division_weight = 0 THEN 0
    ELSE CASE 
           WHEN (bb.weight_day / bb.division_weight) > 1 
           THEN FLOOR((bb.weight_day / bb.division_weight)) + 1 
           ELSE 1 
         END
  END AS a2,                  
  '' AS b,
  '' AS c,
  '' AS d,
  CASE 
    WHEN bb.wrk_ord_no LIKE '%WR%' THEN 'Ïû¨ÏûëÏóÖ'
    ELSE 'Ïã†Í∑ú'
  END AS e,                   
  '' AS f,
  hst2_barcode,
  barcode_no
FROM (
  SELECT 
    aa.mach_code,
    aa.end_time,
    aa.start_time,
    aa.tong_day,
    aa.weight_day,
    aa.item_cd,
    aa.item_nm,
    aa.wrk_ord_no,
    ab.coating_nm AS next_facility,
    ab.group_id,
    COALESCE(aa.std_weight, 0) AS division_weight,
    eh.division_num,             -- üîπ ez_geo_hst.division_num JOIN
    hst2_barcode,
    barcode_no
  FROM (
    SELECT
      lows.mach_code,
      lows.barcode_no,
      ROUND(lows.weight, 0) AS weight_day,
      1 AS tong_day,
      fac.facility_name,
      fac.std_weight,
      lows.start_time,
      lows.end_time,
      lows.item_cd,
      lows.item_nm,
      lows.wrk_ord_no,
      LEAD(lows.end_time) OVER(
        PARTITION BY lows.mach_code, lows.barcode_no 
        ORDER BY lows.end_time DESC
      ) AS next_start_time
    FROM tb_lowdata_save_list_condition AS lows
    INNER JOIN tb_facility AS fac
      ON lows.mach_code = fac.facility_mach_code
    WHERE 1=1
 <if test="s_time != null">
        AND lows.start_time &gt;= #{s_time}
      </if>
      <if test="e_time != null">
        AND lows.start_time &lt; #{e_time}
      </if>
      <if test="m_code2 != null and m_code2 != ''">
        AND lows.mach_code IN (${m_code2})
      </if>
      AND lows.weight IS NOT NULL
  ) AS aa
  LEFT JOIN pwo_geo_division_data AS ab
    ON aa.item_cd = ab.item_cd
  LEFT JOIN
    (
    	SELECT barcode_no AS hst2_barcode, MAX(division_num) AS division_num
  		FROM ez_geo_hst2_save3 
  		WHERE mach_code = #{m_code}
  		AND wrk_gbn_state = 'IN'
  		GROUP BY barcode_no
  	) AS eh
    ON aa.barcode_no = eh.hst2_barcode   -- üîπ division_num Í∞ÄÏ†∏Ïò§Îäî ÏúÑÏπòÎ•º Ïù¥Ï™ΩÏúºÎ°ú ÏòÆÍπÄ
) AS bb
WHERE 1=1
AND bb.mach_code = #{m_code}
ORDER BY bb.start_time;

</select>


  
  
 <select id="getWorkDailySum" parameterType="Work" resultType="Work">
 
 <![CDATA[
SELECT 
  mach_code, 
  facility_name, 
  tong_day,
  FORMAT(SUM(weight_day), 0) AS weight_day,
  w_seconds,
  ROUND(weight_day / tong_day, 1) AS avg_day, -- ÌëúÏ§ÄÏ§ëÎüâ
  TIME_FORMAT(SEC_TO_TIME(w_seconds), '%H:%i') AS work_time,
  ROUND(w_seconds / 3600.0, 1) AS ex_uph_hours, 
  CONCAT(FORMAT(ROUND(weight_day / (w_seconds / 360), 1), 1)* 10, ' kg') AS uph,

  TIME_FORMAT(SEC_TO_TIME(w_m_sec), '%H:%i') AS sum_time,
  tong_month AS tong_sum, -- Ïõî ÏÉùÏÇ∞ ÌÜµÏàò
  weight_month AS weight_sum, -- Ïõî ÎàÑÏ†Å ÏÉùÏÇ∞Ï§ëÎüâ
  CONCAT(FORMAT(ROUND(weight_month / (w_m_sec / 3600), 1), 1), ' kg') AS uph_sum,

  ROUND((ROUND(c_t_hour * (w_seconds / 3600), 1) - tong_day) * c_t, 0) AS stop_seconds, -- Ïùº ÎπÑÍ∞ÄÎèô
  -- ÎπÑÍ∞ÄÎèôÏãúÍ∞Ñ Ìè¨Ìï®Îêú Í∞ÄÎèôÌö®Ïú® (ÏàúÍ∞ÄÎèôÏãúÍ∞Ñ / Í∞ÄÎèôÏãúÍ∞Ñ)
  ROUND(
    ((w_seconds - ROUND((ROUND(c_t_hour * (w_seconds / 3600), 1) - tong_day) * c_t, 0)) / NULLIF(w_seconds, 0)) * 100, 1) AS work_percent,
  w_m_sec,
  ROUND((ROUND(c_t_hour * (w_m_sec / 3600), 1) - tong_day) * c_t, 0) AS stop_seconds_month, -- Ïõî ÎπÑÍ∞ÄÎèô
  ROUND(
    ((w_m_sec - ROUND((ROUND(c_t_hour * (w_m_sec / 3600), 1) - tong_day) * c_t, 0)) / NULLIF(w_m_sec, 0)) * 100
  , 1) AS sum_percent
FROM (
    SELECT 
        mach_code,
        facility_name,
        SUM(tong_day) AS tong_day,
        SUM(weight_day) AS weight_day,
        MAX(w_hr) AS w_seconds,
        SUM(weight_month) AS weight_month,
        SUM(tong_month) AS tong_month,
        MAX(c_t) AS c_t,
        MAX(c_t_hour) AS c_t_hour,
        MAX(capa) AS capa,
        MAX(std_weight) AS std_weight,
        MAX(ch_idx) AS ch_idx,
        SUM(c_t_next) AS c_t_next,
        ROUND((c_t_next), 0) AS c_t_avg_day,
        MAX(end_time) AS max_end_time,
        MAX(work_gb) AS work_gb,
        MAX(w_cnt) AS w_cnt,
        SUM(sss) AS sasdasd,
        MAX(w_m_sec) AS w_m_sec

    FROM (
        SELECT *,
            IFNULL(TIMESTAMPDIFF(SECOND,end_time, end_time_next), 0) AS c_t_next
        FROM (
            SELECT 
                mach_code,
                facility_name,
                start_time,
                end_time,
                LEAD(end_time) OVER(PARTITION BY mach_code ORDER BY end_time) AS end_time_next,
                CASE 
                    WHEN end_time >= w_stime_day AND end_time <= w_etime_day THEN 1 
                    ELSE 0 
                END AS tong_day,
                CASE 
                    WHEN end_time >= w_stime_day AND end_time <= w_etime_day THEN ROUND(weight,1) 
                    ELSE 0 
                END AS weight_day,
                CAST(ROUND(c_t,0) AS INT) AS c_t,
                CAST(ROUND(capa,0) AS INT) AS capa,
                std_weight,
                ch_idx,
                w_hr,
                c_t_hour,
                work_gb,
                w_cnt,
                w_m_sec,
                CASE 
                    WHEN end_time >= w_stime_month AND end_time <= w_etime_month THEN 1 
                    ELSE 0 
                END AS tong_month,
                CASE 
                    WHEN end_time >= w_stime_month AND end_time <= w_etime_month THEN ROUND(weight,1) 
                    ELSE 0 
                END AS weight_month,
                CASE 
                    WHEN end_time IS NOT NULL THEN TIMESTAMPDIFF(SECOND, start_time, end_time) 
                    ELSE 0 
                END AS sss
            FROM tb_lowdata_save A
            LEFT OUTER JOIN (
                SELECT 
                    'JH_KR_01' AS du_plac_cd,
                    '02' AS du_plnt_cd,
                    CASE WHEN #{s_time2} = CURDATE() THEN 1 ELSE 0 END AS work_gb,
                    DATE_FORMAT(CASE WHEN #{s_time2} = CURDATE() 
                        THEN CONCAT(CURDATE(),' 08:00:00') ELSE CONCAT(#{s_time2},' 08:00:00') END,'%Y%m%d%H%i%s') AS w_stime_day,
                    DATE_FORMAT(DATE_ADD(CASE WHEN #{s_time2} = CURDATE() 
                        THEN CONCAT(CURDATE(),' 08:00:00') ELSE CONCAT(#{s_time2},' 08:00:00') END, INTERVAL 1 DAY), '%Y%m%d%H%i%s') AS w_etime_day,
                    DATE_FORMAT(CASE WHEN MONTH(#{s_time2}) = MONTH(CURDATE()) 
                        THEN CONCAT(CURDATE(),' 08:00:00') ELSE CONCAT(#{s_time2},' 08:00:00') END,'%Y%m01%H%i%s') AS w_stime_month,
                    DATE_FORMAT(DATE_ADD(CASE WHEN MONTH(#{s_time2}) = MONTH(CURDATE()) 
                        THEN CONCAT(LAST_DAY(CURDATE()),' 08:00:00') ELSE CONCAT(LAST_DAY(#{s_time2}),' 08:00:00') END, INTERVAL 1 DAY), '%Y%m%d%H%i%s') AS w_etime_month,
                    CASE 
                        WHEN #{s_time2} = CURDATE() THEN TIMESTAMPDIFF(SECOND, CONCAT(CURDATE(),' 08:00:00'), NOW()) 
                        ELSE 86400 
                    END AS w_hr,
                    CASE 
                        WHEN #{s_time2} = CURDATE() THEN DAY(CURDATE()) 
                        ELSE DAY(#{s_time2}) 
                    END AS w_cnt,
                    CASE 
                        WHEN #{s_time2} = CURDATE() THEN TIMESTAMPDIFF(SECOND, DATE_FORMAT(#{s_time2},'%Y-%m-01 08:00:00'), DATE_ADD(NOW(), INTERVAL 1 DAY))
                        ELSE TIMESTAMPDIFF(SECOND, DATE_FORMAT(#{s_time2},'%Y-%m-01 08:00:00'), CONCAT(DATE_ADD(#{s_time2}, INTERVAL 1 DAY),' 08:00:00'))
                    END AS w_m_sec                    
            ) B ON A.plac_cd = B.du_plac_cd AND A.plnt_cd = B.du_plnt_cd
            LEFT OUTER JOIN (
                SELECT * FROM tb_facility WHERE ch_idx < 30
            ) C ON A.mach_code = C.facility_mach_code
            WHERE A.mach_code =  #{m_code}
              AND A.end_time >= B.w_stime_month
              AND A.end_time <= B.w_etime_month
        ) AA
    ) BB
    GROUP BY mach_code, facility_name
) AS CC

  ]]>
</select>

  
<select id="getReportInputLIst" parameterType="Work" resultType="Work">
  <![CDATA[
SELECT *
FROM (
	SELECT *
	FROM (
		SELECT *,
		CASE 
			WHEN b_a = 'Ïò§Ï†Ñ' THEN CONCAT(date, ' 06:00:00')
			WHEN b_a = 'Ïò§ÌõÑ' THEN CONCAT(date, ' 15:00:00')
			WHEN b_a = 'ÏïºÍ∞Ñ' THEN CONCAT(date, ' 22:00:00')
		END AS dssa,
		(tank_temp + visocosity + specific_gravity + chiller_temp) AS row_sum
		FROM tb_part_temp
	) AS A
	WHERE date = #{s_time2}
	  AND mch_code = #{m_code}
	  AND row_sum <> 0
) AS AA
LEFT OUTER JOIN
(
	SELECT t.*
	FROM tb_temp_data t
	JOIN (
	    -- HOUR = 6, 15, 22 Î≥ÑÎ°ú Í∞ÄÏû• Îπ†Î•∏
	    SELECT 
	      MIN(temp_time) AS tm
	    FROM tb_temp_data
	    WHERE DATE(temp_time) = #{s_time2}
	      AND HOUR(temp_time) IN (6, 15, 22)
	    GROUP BY HOUR(temp_time)
	) AS m
	ON t.temp_time = m.tm
) AS BB
ON LEFT(dssa, 16) = LEFT(temp_time, 16);
  ]]>
</select>



  
  
  <insert id="getReportInput" parameterType="Work">
  INSERT INTO tb_report_input (
    input_date,
    mch_code,
    mch_name,
    gb,
    visc,
    pre_temp,
    heat_temp,
    liq_temp,
    sg
  ) VALUES (
    #{s_time},
    #{m_code},
    #{mch_name},
    #{gb},
    #{visc},
    #{pre_temp},
    #{heat_temp},
    #{liq_temp},
    #{sg}
  )
</insert>
  <insert id="insertReportInput" parameterType="Work">
  INSERT INTO tb_report_input (
    idx,
    input_date,
    mch_code,
    mch_name,
    gb,
    visc,
    pre_temp,
    heat_temp,
    liq_temp,
    sg
  ) VALUES (
    #{idx},
    #{input_date},
    #{mch_code},
    #{mch_name},
    #{gb},
    #{visc},
    #{pre_temp},
    #{heat_temp},
    #{liq_temp},
    #{sg}
  )
  ON DUPLICATE KEY UPDATE
    input_date = VALUES(input_date),
    mch_code = VALUES(mch_code),
    mch_name = VALUES(mch_name),
    gb = VALUES(gb),
    visc = VALUES(visc),
    pre_temp = VALUES(pre_temp),
    heat_temp = VALUES(heat_temp),
    liq_temp = VALUES(liq_temp),
    sg = VALUES(sg)
</insert>
  
  
  <delete id="deleteReportInput" parameterType="Work">
  DELETE FROM tb_report_input
  WHERE idx = #{idx}
  </delete>
  
  
  
<select id="MonitoringStatusList" parameterType="Work" resultType="Work">
<![CDATA[
SELECT 
  facility_name,
  mach_code,
  std_weight,
  c_t,
  division AS aa,
  bb,
  work_day,
  set_hr,
  mok_hr,
  capa_day,
  -- ÏùºÎ≥Ñ tong Í∏∞Ï§Ä ÏßÄÌëú
  ROUND((tong * std_weight) / 1000, 1) AS day_ton,
  ROUND((((tong * std_weight) / 1000) / capa_day) * 100, 1) AS percent_day,
  ROUND((tong * std_weight) / 1000 - capa_day, 1) AS bujok_day,
  -- ÏõîÎ≥Ñ Í∏∞Ï§Ä ÏßÄÌëú Ï∂îÍ∞Ä
FORMAT(ROUND((work_month * capa_day), 1), 1) AS capa_month, -- Ïõî CAPA
FORMAT(ROUND((m_tong * std_weight) / 1000, 1), 1) AS month_ton, -- Ïõî TON
FORMAT(ROUND((((m_tong * std_weight) / 1000) / (work_month * capa_day)) * 100, 1), 1) AS percent_month, -- Îã¨ÏÑ±Î•†
FORMAT(ROUND((m_tong * std_weight) / 1000 - (work_month * capa_day), 1), 1) AS bujok_month, -- Î∂ÄÏ°±
FORMAT(ROUND((work_day / capa_day) * 1000,1), 1) AS capa_sum, -- CAPA Ìï©Í≥Ñ

  '1' AS cc,
  '1' AS dd,
  '1' AS ee,
  tong,
  m_tong,
  ch_idx
FROM (
  SELECT 
    mach_code,
    facility_name,
    std_weight,
    c_t,
    1 AS aa,
    1 AS bb,
    work_day,
    work_month,
    work_day * 24 AS set_hr,
    work_day * 24 AS mok_hr,
    ROUND((capa * std_weight) / 1000,1) AS capa_day,
    division,
    tong,
    m_tong,
    ch_idx
  FROM (
    SELECT 
      mach_code,
      MAX(facility_name) AS facility_name,
      SUM(CASE WHEN start_time >= start_time_day THEN 1 ELSE 0 END) AS tong,     -- Ïùº tong
      COUNT(*) AS m_tong,                                                        -- Ïõî tong
      ROUND(SUM(weight), 0) AS weight,
      work_day,
      work_month,
      ROUND(SUM(weight), 0) AS weight_day,
      MAX(work_time) AS work_time,
      MAX(c_t) AS c_t,
      MAX(capa) AS capa,
      MAX(std_weight) AS std_weight,
      MAX(division) AS division,
      MAX(ch_idx) AS ch_idx
    FROM (
      SELECT 
        *,
        LEAD(start_time) OVER (PARTITION BY mach_code, barcode_no ORDER BY start_time DESC) AS next_start_time,
        1 AS tong,
		CASE WHEN DATE_FORMAT(SUBSTR(#{s_time},1,8),'%Y-%m-%d') = CURDATE() THEN  
			TIMESTAMPDIFF(HOUR,CONCAT(DATE_FORMAT(LEFT(#{s_time},8), '%Y-%m-%d'),' 08:00:00'), NOW())
		ELSE  
			24
		END AS work_time,
        DAY(LAST_DAY(CONCAT(DATE_FORMAT(LEFT(#{s_time},8),'%Y-%m-%d'),' 08:00:00'))) AS work_day,
        DAY(LAST_DAY(CONCAT(DATE_FORMAT(LEFT(#{s_time},8),'%Y-%m-%d'),' 08:00:00'))) AS work_month
      FROM tb_lowdata_save AS A
      LEFT JOIN (
        SELECT 
          'JH_KR_01' AS plac_cd_t, 
          '02' AS plnt_cd_t,
          -- Ïò§Îäò 08Ïãú
          CASE 
            WHEN CAST(LEFT(#{s_time}, 2) AS UNSIGNED) < 8 
            THEN CONCAT(DATE_FORMAT(DATE_SUB(STR_TO_DATE(#{s_time}, '%Y%m%d%H%i%s'), INTERVAL 1 DAY), '%Y%m%d'),'080000')
            ELSE CONCAT(SUBSTR(#{s_time},1,8),'080000')
          END AS start_time_day,
          -- Ïõî 1Ïùº 08Ïãú
          CONCAT(#{start_month}, '01', '080000') AS start_time_month
        FROM dual
      ) B
      ON A.plac_cd = B.plac_cd_t
      AND A.plnt_cd = B.plnt_cd_t
      LEFT JOIN 
      (SELECT 
       facility_mach_code, facility_name,
       c_t, capa, std_weight, division, work_time2, ch_idx
       FROM tb_facility 
      ) AS C
        ON A.mach_code = C.facility_mach_code
      WHERE A.start_time >= CONCAT(#{start_month}, '01', '080000')
    ) A
    WHERE next_start_time IS NULL
    GROUP BY ch_idx
  ) AA
) BB;
]]>
</select>




<select id="MonitoringStatusList2" parameterType="Work" resultType="Work">
<![CDATA[

SELECT 
     AAA.ch_idx,
     AAA.facility_name,
     AAA.C,
     AAA.C_min,
     AAA.D,
     AAA.E,
     AAA.F,
     AAA.G,
     AAA.H,
     AAA.H_min,
     AAA.I,
     BBB.J,
     BBB.K,	
     BBB.L,
     ROUND(BBB.L / AAA.F, 1) * 100 AS M,
     ROUND(BBB.L / AAA.I, 1) * 100 AS N,
     L - F AS O,
     FORMAT((L - I),1) AS P,
     Q AS Q,
     ROUND(((L - I) * 170) / 1000,1) AS R,
     ROUND((L - I) / D, 1) AS S,
     ROUND((L - I) / D, 1) * 60 AS T,
   	TRUNCATE(((ROUND((L - I) / D, 1) / c) * 60) * 100, 1) AS U




FROM (
	SELECT 
		facility_code, facility_name, facility_mach_code,
		facility_comment, c_t, capa, c_t_hour,
		std_weight, ch_idx, division,
	    facility_name AS B,
	    -- CASE WHEN work_gb = 0 THEN TIMESTAMPDIFF(MINUTE, CONCAT(CURDATE(), ' 08:00:00'), NOW()) ELSE (du.work_time*60) END AS C,  -- Ïã§ Í∞ÄÎèô ÏãúÍ∞Ñ (Î∂Ñ)    
	    CASE WHEN work_gb = 0 THEN TIMESTAMPDIFF(MINUTE, CONCAT(CURDATE(), ' 08:00:00'), NOW()) ELSE (du.work_time*60) END AS C,  -- Ïã§ Í∞ÄÎèô ÏãúÍ∞Ñ (Î∂Ñ)    
	    TIME_FORMAT(SEC_TO_TIME((CASE WHEN work_gb = 0 THEN TIMESTAMPDIFF(MINUTE, CONCAT(CURDATE(), ' 08:00:00'), NOW()) ELSE (du.work_time*60) END) * 60), '%H:%i') AS C_min, -- Ïãú:Î∂Ñ   
	    c_t_hour AS D,  -- ÏãúÍ∞ÑÎãπ ÏÉùÏÇ∞Îüâ (ÌÜµ)    
	    ROUND((c_t_hour * 12), 0) AS E, -- Ï°∞Î≥Ñ ÏÉùÏÇ∞
	    ROUND((c_t_hour * 12), 0) * 2 AS F, -- Ïùº CAPAÌÜµ,	    
	    '01:20' AS G,  -- Ïã§Í∞ÄÎèô ÏãúÍ∞Ñ
	    ROUND(((CASE WHEN work_gb = 0 THEN TIMESTAMPDIFF(MINUTE, CONCAT(CURDATE(), ' 08:00:00'), NOW()) ELSE (du.work_time*60) END - TIME_TO_SEC('00:00')/60)/60),0) AS H,    
	    TIME_FORMAT(SEC_TO_TIME((CASE WHEN work_gb = 0 THEN TIMESTAMPDIFF(MINUTE, CONCAT(CURDATE(), ' 08:00:00'), NOW()) ELSE (du.work_time*60) END - TIME_TO_SEC('00:00')/60)*60),'%H:%i') AS H_min,
	     FORMAT(((CASE WHEN work_gb = 0 THEN TIMESTAMPDIFF(MINUTE, CONCAT(CURDATE(), ' 08:00:00'), NOW()) ELSE (du.work_time*60) END - TIME_TO_SEC('00:00')/60)/60) * c_t_hour,1) AS I,
	    "ÏóÜÏùå" AS Q,
		du.work_time, work_gb
	FROM (
		SELECT *, 'Z' AS Z
		FROM tb_facility
		WHERE ch_idx != 9999
	) AS fac
	LEFT OUTER JOIN
	(
	  	SELECT
	  	'Z' AS ZZ,
		CASE WHEN DATE_FORMAT(SUBSTR(#{s_time},1,8),'%Y-%m-%d') = CURDATE() THEN  
			TIMESTAMPDIFF(HOUR,CONCAT(DATE_FORMAT(LEFT(#{s_time},8), '%Y-%m-%d'),' 08:00:00'), NOW())
		ELSE  
			24
		END AS work_time,
		CASE WHEN DATE_FORMAT(SUBSTR(#{s_time},1,8),'%Y-%m-%d') = CURDATE() THEN 0 ELSE 1 END work_gb
	) AS du
	ON fac.Z = du.ZZ
) AS AAA
INNER JOIN (
	SELECT
		mach_code,
		-- Ï†ÑÏ≤¥ Î≤îÏúÑ ÎÇ¥ Í∞úÏàò
	    SUM(CASE
	      WHEN end_time >= #{s_time} AND end_time < #{e_time}
	      THEN 1 ELSE 0 END) AS L,
	    -- Ï£ºÍ∞ÑÏ°∞: ÎãπÏùº 08:00:00 ~ ÎãπÏùº 20:00:00
	    SUM(CASE
	      WHEN end_time >= CONCAT(SUBSTR(#{s_time}, 1, 8), '080000')
	       AND end_time <  CONCAT(SUBSTR(#{s_time}, 1, 8), '200000')
	      THEN 1 ELSE 0 END) AS J,
	    -- ÏïºÍ∞ÑÏ°∞: ÎãπÏùº 20Ïãú Îã§ÏùåÎÇ† 08
	    SUM(CASE
	      WHEN end_time >= CONCAT(SUBSTR(#{s_time}, 1, 8), '200000')
	       AND end_time <  CONCAT(DATE_FORMAT(DATE_ADD(STR_TO_DATE(SUBSTR(#{s_time}, 1, 8), '%Y%m%d'), INTERVAL 1 DAY), '%Y%m%d'), '080000')
	      THEN 1 ELSE 0 END) AS K
	FROM tb_lowdata_save
	WHERE start_time IS NOT NULL
    AND end_time IS NOT NULL
    AND end_time >= #{s_time}
    AND end_time <  #{e_time}
	GROUP BY mach_code
) AS BBB
ON AAA.facility_mach_code = BBB.mach_code
ORDER BY AAA.ch_idx;



]]>
</select>




<select id="lotReportStatusList" parameterType="Work" resultType="Work">

SELECT barcode_no,
       MAX(item_cd) AS item_cd,
       MAX(item_nm) AS item_nm,
       GROUP_CONCAT(IF(mach_code LIKE 'W%', CONCAT(facility_name,' - ',start_time), NULL)) AS 'w_s',
       GROUP_CONCAT(IF(mach_code LIKE 'W%', CONCAT(facility_name,' - ',end_time), NULL)) AS 'w_e',
       GROUP_CONCAT(IF(mach_code LIKE 'S%', CONCAT(facility_name,' - ',start_time), NULL)) AS 's_s',
       GROUP_CONCAT(IF(mach_code LIKE 'S%', CONCAT(facility_name,' - ',end_time), NULL)) AS 's_e',
       GROUP_CONCAT(IF(mach_code LIKE 'G03-%', CONCAT(facility_name,' - ',start_time), NULL)) AS 'g_s',
       GROUP_CONCAT(IF(mach_code LIKE 'G03-%', CONCAT(facility_name,' - ',end_time), NULL)) AS 'g_e',
       GROUP_CONCAT(IF(mach_code LIKE 'G04-%', CONCAT(facility_name,' - ',start_time), NULL)) AS 'mlpl_s',
       GROUP_CONCAT(IF(mach_code LIKE 'G04-%', CONCAT(facility_name,' - ',end_time), NULL)) AS 'mlpl_e'
FROM (
    SELECT A.barcode_no, 
           DATE_FORMAT(A.start_time, '%Y-%m-%d %H:%i:%s') AS start_time, 
           DATE_FORMAT(A.end_time, '%Y-%m-%d %H:%i:%s') AS end_time,
           A.item_cd, A.item_nm, A.mach_code,
           B.facility_name 
    FROM tb_lowdata_save A
    LEFT OUTER JOIN tb_facility B ON A.mach_code = B.facility_mach_code
    WHERE 1=1
    AND start_time IS NOT NULL AND end_time IS NOT NULL
      <if test="startDate != null and startDate != ''">
        AND A.end_time &gt;= #{startDate}
      </if>
      <if test="endDate != null and endDate != ''">
        AND A.end_time &lt;= #{endDate}
      </if>
      <if test="barcode_no != null and barcode_no != ''">
        AND A.barcode_no = #{barcode_no}
      </if>
) AS AA
GROUP BY barcode_no
ORDER BY MAX(end_time) DESC;


</select>



<select id="getInputControlStatusUp" parameterType="Work" resultType="Work">
<![CDATA[
SELECT
  MAX(CASE WHEN facility_name = 'ÏÑ∏Ï≤ô1Ìò∏Í∏∞' THEN d END) AS w1,
  MAX(CASE WHEN facility_name = 'ÏÑ∏Ï≤ô2Ìò∏Í∏∞' THEN d END) AS w2,
  MAX(CASE WHEN facility_name = 'ÏáºÌä∏1Ìò∏Í∏∞' THEN d END) AS s1,
  MAX(CASE WHEN facility_name = 'ÏáºÌä∏2Ìò∏Í∏∞' THEN d END) AS s2,
  MAX(CASE WHEN facility_name = 'ÏáºÌä∏3Ìò∏Í∏∞' THEN d END) AS s3,
  MAX(CASE WHEN facility_name = 'ÏáºÌä∏4Ìò∏Í∏∞' THEN d END) AS s4,
  MAX(CASE WHEN facility_name = 'ÏáºÌä∏5Ìò∏Í∏∞' THEN d END) AS s5,
  MAX(CASE WHEN facility_name = 'ÏáºÌä∏6Ìò∏Í∏∞' THEN d END) AS s6,
  MAX(CASE WHEN facility_name = 'G600' THEN d END) AS g6,
  MAX(CASE WHEN facility_name = 'G800' THEN d END) AS g8,
  MAX(CASE WHEN facility_name = 'K-BLACK' THEN d END) AS kb,
  MAX(CASE WHEN facility_name = 'Í≥µÏö©ÏÑ§ÎπÑ' THEN d END) AS mlpl
FROM (
  SELECT 
    IFNULL(facility_name, fac_name3) AS facility_name,
    IFNULL(d, 'ÎπÑÍ∞ÄÎèô') AS d
  FROM (
     SELECT facility_mach_Code AS fac_code3, facility_name AS fac_name3, ch_idx
     FROM tb_facility
     WHERE ch_idx < 30
  ) AS main
  LEFT OUTER JOIN
  (
     SELECT mach_code, facility_name,
       CASE 
         WHEN work_gb = 0 THEN 'Í∞ÄÎèô'
         ELSE 
           CASE 
             WHEN TIMESTAMPDIFF(HOUR, max_end_time, NOW()) > 2 
             THEN 'ÎπÑÍ∞ÄÎèô'
             ELSE 'Í∞ÄÎèô'
           END
       END AS d
     FROM (
        SELECT mach_code, facility_name,
          MAX(end_time) AS max_end_time,
          MAX(work_gb) AS work_gb
        FROM (
           SELECT 
             mach_code,
             facility_name,
             end_time,
             work_gb
           FROM tb_lowdata_save A
           LEFT JOIN (
             SELECT 'JH_KR_01' AS du_plac_cd, '02' AS du_plnt_cd,
               CASE WHEN CURDATE() = CURDATE() THEN 1 ELSE 0 END AS work_gb
           ) AS B
           ON A.plac_cd = B.du_plac_cd AND A.plnt_cd = B.du_plnt_cd
           LEFT JOIN (
             SELECT * FROM tb_facility WHERE ch_idx < 30
           ) AS C
           ON A.mach_code = C.facility_mach_code
           WHERE A.start_time >= DATE_FORMAT(CURDATE(), '%Y%m01%H%i%s')
             AND A.start_time <= DATE_FORMAT(DATE_ADD(LAST_DAY(CURDATE()), INTERVAL 1 DAY), '%Y%m%d%H%i%s')
        ) AS AA
        GROUP BY mach_code, facility_name
     ) AS BB
  ) AS DD
  ON main.fac_code3 = DD.mach_code
) AS pivoted;
]]>
</select>

<select id="getInputControlStatusDown" parameterType="Work" resultType="Work">
  SELECT 
      A.ResourceID,
      CASE A.ResourceID
          WHEN 'G01-GW01' THEN 'ÏÑ∏Ï≤ô1'
          WHEN 'G01-GW02' THEN 'ÏÑ∏Ï≤ô2'
          WHEN 'G03-GG01' THEN 'G-800'
          WHEN 'G03-GG03' THEN 'G-600'
          WHEN 'G02-GC01' THEN 'ÏáºÌä∏1Ìò∏Í∏∞'
          WHEN 'G02-GC02' THEN 'ÏáºÌä∏2Ìò∏Í∏∞'
          WHEN 'G02-GC03' THEN 'ÏáºÌä∏3Ìò∏Í∏∞'
          WHEN 'G02-GC04' THEN 'ÏáºÌä∏4Ìò∏Í∏∞'
          WHEN 'G02-GC05' THEN 'ÏáºÌä∏5Ìò∏Í∏∞'
          WHEN 'G02-GC07' THEN 'ÏáºÌä∏6Ìò∏Í∏∞'
          WHEN 'G04-GG05' THEN 'K-BLACK'
          WHEN 'G04-GG07' THEN 'Í≥µÏö©ÏÑ§ÎπÑ'
          ELSE A.ResourceID
      END AS ResourceName,
      SUM(A.downtime) AS downtime,
      COUNT(*) AS cc
  FROM 
      dbo.V_FEMS_IF_DOWNTIME A
  WHERE 
      A.endtime IS NOT NULL
      AND A.workDay &gt;= #{startDate}
      AND A.workDay &lt;= #{endDate}
      AND A.ResourceID IN (
          'G01-GW01',
          'G01-GW02',
          'G03-GG01',
          'G03-GG03',
          'G02-GC01',
          'G02-GC02',
          'G02-GC03',
          'G02-GC04',
          'G02-GC05',
          'G02-GC07',
          'G04-GG05',
          'G04-GG07'
      )
  GROUP BY 
      A.ResourceID
  ORDER BY 
      ResourceName
</select>


<select id="machineRealStatusUp"  resultType="Work">
SELECT * FROM GEO_DIS_INV 
</select>

<select id="machineRealStatusDown"  resultType="Work">
SELECT 
    rownum,
    LINE_CD,
    total_cnt,
    prod_cnt,
    prod_cnt,
    ml,
    pl,
    kb,
    sv,
    ar,
    ws,
    no,
    CASE 
        WHEN LINE_CD = 'C0100' THEN 'ÏÑ∏Ï≤ô 1Î≤à Î†àÏùº' 
        WHEN LINE_CD = 'C0200' THEN 'ÏÑ∏Ï≤ô 2Î≤à Î†àÏùº' 
        WHEN LINE_CD = 'C0300' THEN 'ÏÑ∏Ï≤ô 3Î≤à Î†àÏùº' 
        WHEN LINE_CD = 'C0400' THEN 'ÏÑ∏Ï≤ô 4Î≤à Î†àÏùº' 
        WHEN LINE_CD = 'C0500' THEN 'ÏÑ∏Ï≤ô 5Î≤à Î†àÏùº' 
        WHEN LINE_CD = 'C0600' THEN 'ÏÑ∏Ï≤ô 6Î≤à Î†àÏùº' 
        WHEN LINE_CD = 'W0100' THEN 'ÏÑ∏Ï≤ô 1Ìò∏Í∏∞' 
        WHEN LINE_CD = 'W0200' THEN 'ÏÑ∏Ï≤ô 2Ìò∏Í∏∞' 
        WHEN LINE_CD = 'B0500' THEN 'ÏáºÌä∏ 1Î≤à Î≤ÑÌçº' 
        WHEN LINE_CD = 'B0600' THEN 'ÏáºÌä∏ 2Î≤à Î≤ÑÌçº' 
        WHEN LINE_CD = 'B0700' THEN 'ÏáºÌä∏ 3Î≤à Î≤ÑÌçº' 
        WHEN LINE_CD = 'B0800' THEN 'ÏáºÌä∏ 4Î≤à Î≤ÑÌçº' 
        WHEN LINE_CD = 'G03-GG01' THEN 'G800' 
        WHEN LINE_CD = 'G03-GG01_INCOV' THEN 'G800 Ìà¨ÏûÖ' 
        WHEN LINE_CD = 'G03-GG01_OUTCOV' THEN 'G800 Ìá¥Ï∂ú' 
        WHEN LINE_CD = 'G03-GG03' THEN 'G600' 
        WHEN LINE_CD = 'G03-GG03_INCOV' THEN 'G600 Ìà¨ÏûÖ' 
        WHEN LINE_CD = 'G03-GG03_OUTCOV' THEN 'G600 Ìá¥Ï∂ú' 
        WHEN LINE_CD = 'G04-GG05' THEN 'K-BLACK' 
        WHEN LINE_CD = 'G04-GG05_INCOV' THEN 'K-BLACK Ìà¨ÏûÖ' 
        WHEN LINE_CD = 'G04-GG05_OUTCOV' THEN 'K-BLACK Ìá¥Ï∂ú' 
        WHEN LINE_CD = 'G04-GG07' THEN 'Í≥µÏö©ÏÑ§ÎπÑ' 
        WHEN LINE_CD = 'G04-GG07_INCOV1' THEN 'Í≥µÏö©ÏÑ§ÎπÑ1 Ìà¨ÏûÖ' 
        WHEN LINE_CD = 'G04-GG07_INCOV2' THEN 'Í≥µÏö©ÏÑ§ÎπÑ2 Ìà¨ÏûÖ' 
        WHEN LINE_CD = 'G04-GG07_OUTCOV1' THEN 'Í≥µÏö©ÏÑ§ÎπÑ1 Ìá¥Ï∂ú' 
        WHEN LINE_CD = 'G04-GG07_OUTCOV2' THEN 'Í≥µÏö©ÏÑ§ÎπÑ2 Ìá¥Ï∂ú' 
    END AS mch_name
FROM 
    EZ_FLOW_VIEW

</select>






<select id="monitoringStatusList"  resultType="Work">
<![CDATA[
        SELECT 
            AAA.ch_idx,
            AAA.facility_name,
			FORMAT(AAA.F * 170, 0) AS target_weight,           -- Ïùº Î™©Ìëú ÏÉùÏÇ∞Îüâ
			FORMAT(ROUND(BBB.weight * BBB.L, 1), 1) AS now_weight,   -- ÌòÑ ÏÉùÏÇ∞Îüâ
			FORMAT(ROUND((BBB.weight * BBB.L) / AAA.work_time, 1), 1) AS hour_weight, -- ÏãúÍ∞ÑÎãπ ÏÉùÏÇ∞Îüâ

            ROUND(BBB.L / AAA.F, 1) * 100 AS jindo,
            BBB.L AS work_tong,
            ROUND((L - I) / D, 1) AS non_time,

            AAA.work_time,
            BBB.weight,
            AAA.C,
            AAA.C_min,
            AAA.D,
            AAA.E,
            AAA.G,
            AAA.H,
            AAA.H_min,
            AAA.I,
            BBB.J,
            BBB.K,
            ROUND(BBB.L / AAA.I, 1) * 100 AS N,
            L - F AS O,
            FORMAT((L - I),1) AS P,
            Q AS Q,
            ROUND(((L - I) * 170) / 1000,1) AS R,

            ROUND((L - I) / D, 1) * 60 AS T,
            TRUNCATE(((ROUND((L - I) / D, 1) / C) * 60) * 100, 1) AS U
        FROM
        (
            SELECT 
                facility_code,
                facility_name,
                facility_mach_code,
                facility_comment,
                c_t,
                capa,
                c_t_hour,
                std_weight,
                ch_idx,
                division,
                facility_name AS B,
                CASE WHEN work_gb = 0 THEN TIMESTAMPDIFF(MINUTE, CONCAT(CURDATE(), ' 08:00:00'), NOW())
                     ELSE (du.work_time*60) END AS C,
                TIME_FORMAT(SEC_TO_TIME((CASE WHEN work_gb = 0 THEN TIMESTAMPDIFF(MINUTE, CONCAT(CURDATE(), ' 08:00:00'), NOW())
                     ELSE (du.work_time*60) END) * 60), '%H:%i') AS C_min,
                c_t_hour AS D,
                ROUND((c_t_hour * 12), 0) AS E,
                ROUND((c_t_hour * 12), 0) * 2 AS F,
                '01:20' AS G,
                ROUND(((CASE WHEN work_gb = 0 THEN TIMESTAMPDIFF(MINUTE, CONCAT(CURDATE(), ' 08:00:00'), NOW())
                     ELSE (du.work_time*60) END - TIME_TO_SEC('00:00')/60)/60),0) AS H,
                TIME_FORMAT(SEC_TO_TIME((CASE WHEN work_gb = 0 THEN TIMESTAMPDIFF(MINUTE, CONCAT(CURDATE(), ' 08:00:00'), NOW())
                     ELSE (du.work_time*60) END - TIME_TO_SEC('00:00')/60)*60),'%H:%i') AS H_min,
                FORMAT(((CASE WHEN work_gb = 0 THEN TIMESTAMPDIFF(MINUTE, CONCAT(CURDATE(), ' 08:00:00'), NOW())
                     ELSE (du.work_time*60) END - TIME_TO_SEC('00:00')/60)/60) * c_t_hour,1) AS I,
                "ÏóÜÏùå" AS Q,
                du.work_time,
                work_gb
            FROM
            (
                SELECT *, 'Z' AS Z FROM tb_facility WHERE ch_idx != 9999
            ) AS fac
            LEFT OUTER JOIN
            (
                SELECT 'Z' AS ZZ,
                    CASE WHEN DATE_FORMAT(SUBSTR(#{startDate},1,8),'%Y-%m-%d') = CURDATE() THEN TIMESTAMPDIFF(HOUR,
                             CONCAT(DATE_FORMAT(LEFT(#{startDate},8), '%Y-%m-%d'),' 08:00:00'), NOW())
                         ELSE 24 END AS work_time,
                    CASE WHEN DATE_FORMAT(SUBSTR(#{startDate},1,8),'%Y-%m-%d') = CURDATE() THEN 0 ELSE 1 END work_gb
            ) AS du
            ON fac.Z = du.ZZ
        ) AS AAA
        INNER JOIN
        (
            SELECT mach_code, weight,
                   SUM(CASE WHEN end_time >= #{startDate} AND end_time < #{endDate} THEN 1 ELSE 0 END) AS L,
                   SUM(CASE WHEN end_time >= CONCAT(SUBSTR(#{startDate}, 1, 8), '080000') 
                            AND end_time < CONCAT(SUBSTR(#{startDate}, 1, 8), '200000') THEN 1 ELSE 0 END) AS J,
                   SUM(CASE WHEN end_time >= CONCAT(SUBSTR(#{startDate}, 1, 8), '200000') 
                            AND end_time < CONCAT(DATE_FORMAT(DATE_ADD(STR_TO_DATE(SUBSTR(#{startDate}, 1, 8), '%Y%m%d'), INTERVAL 1 DAY), '%Y%m%d'), '080000') THEN 1 ELSE 0 END) AS K
            FROM tb_lowdata_save
            WHERE start_time IS NOT NULL
              AND end_time IS NOT NULL
              AND end_time >= #{startDate}
              AND end_time < #{endDate}
            GROUP BY mach_code
        ) AS BBB
        ON AAA.facility_mach_code = BBB.mach_code
        ORDER BY AAA.ch_idx
]]>
</select>

<!-- ÏïΩÌíàÏ†ïÎ≥¥ -->
 <select id="getMedicineInfoList" resultType="Work">
    SELECT *
    FROM tb_medicine_info
    WHERE y_n = 'y'
</select>

   <!-- ÏïΩÌíàÏ†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏ -->
   <update id="medicineInfoUpdate" parameterType="Work">
      UPDATE tb_medicine_info
    SET
        medicine_name = #{medicine_name},
        kg_price = #{kg_price},
        barrel_weight = #{barrel_weight},
        barrel_price = #{barrel_price},
        attachment_spec = #{attachment_spec},
        unit = #{unit}
    WHERE m_id = #{m_id}
   </update>
   
      <!-- ÏïΩÌíàÏ†ïÎ≥¥ ÏÇ≠Ï†ú(ÏóÖÎç∞Ïù¥Ìä∏) -->
   <update id="medicineInfoDelete" parameterType="Work">
      UPDATE tb_medicine_info
    SET
        y_n = 'n'
    WHERE m_id = #{m_id}
   </update>
   
   <!-- ÏïΩÌíàÏ†ïÎ≥¥ Ï∂îÍ∞Ä -->
   <insert id="medicineInfoInsert">
    <![CDATA[
    INSERT INTO tb_medicine_info () VALUES ();
    ]]>
   </insert>




<select id="getMedicineInfo_main" parameterType="Work" resultType="Work">
    <![CDATA[
    WITH month_data AS (
        SELECT 
            mach_code_group,
            ROUND(SUM(weight),0) AS month_kg
        FROM (
            SELECT 
                *,
                LEAD(start_time) OVER (PARTITION BY mach_code, barcode_no ORDER BY end_time DESC) AS next_end_time,
                CASE 
                    WHEN mach_code LIKE 'W%'        THEN 'W'
                    WHEN mach_code LIKE 'S%'        THEN 'S'
                    WHEN mach_code LIKE 'G03%'      THEN 'G'
                    WHEN mach_code LIKE 'G04-GG07%' THEN 'MP'
                    WHEN mach_code LIKE 'G04-GG05%' THEN 'KB'
                    ELSE mach_code
                END AS mach_code_group
            FROM tb_lowdata_save
            WHERE start_time >= #{start_date}
              AND start_time < #{end_date}
        ) AS inner_A
        WHERE next_end_time IS NULL
        GROUP BY mach_code_group
    ),

    max_opening AS (
        SELECT 
            medicine_name,
            MAX(month_start) AS month_start,  
            IFNULL(SUM(opening_balance),0) AS opening_balance,
            IFNULL(SUM(total_in),0)        AS total_in,
            IFNULL(SUM(total_usage),0)     AS total_usage,
            IFNULL(SUM(net_change),0)      AS net_change,
            IFNULL(SUM(end_balance),0)     AS end_balance
        FROM tb_month_opening
        WHERE DATE_FORMAT(month_start, '%Y-%m') = #{month_ym}
        GROUP BY medicine_name
    )

    SELECT 
        M.m_id,
        M.medicine_name,
        M.m_mach_code,
        IFNULL(B.month_kg,0) AS month_kg_1,
        IFNULL(O.opening_balance,0) AS opening_balance_2,
        IFNULL(M.kg_price,0) AS kg_price_3,
        IFNULL(M.barrel_price,0) AS barrel_price_4,
        IFNULL(M.barrel_weight,0) AS barrel_weight_5,
        IFNULL(O.total_in,0) AS total_in_6,
        IFNULL(O.total_usage,0) AS total_usage_7,
        IFNULL(ROUND((O.total_usage * M.barrel_price),1),0) AS use_price_8,
        IFNULL(ROUND(B.month_kg / (M.barrel_weight * O.total_usage),0),0) AS kg_use_9,
        IFNULL(ROUND(((O.opening_balance + O.total_in) - O.total_usage),0),0) AS medicine_tong_10,
        M.attachment_spec AS attachment_spec_11,
        M.unit,
        M.y_n,
        O.month_start,
        IFNULL(O.total_usage,0) AS total_usage,
        IFNULL(O.net_change,0) AS net_change,
        IFNULL(O.end_balance,0) AS end_balance
    FROM tb_medicine_info M
    LEFT JOIN max_opening O
        ON O.medicine_name = M.medicine_name
    LEFT JOIN month_data B
        ON B.mach_code_group = M.m_mach_code
    ]]>
</select>








</mapper>